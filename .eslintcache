[{"/Users/noa/Development/code/projects/appointments-list/appointments-list-frontend/src/index.js":"1","/Users/noa/Development/code/projects/appointments-list/appointments-list-frontend/src/reportWebVitals.js":"2","/Users/noa/Development/code/projects/appointments-list/appointments-list-frontend/src/App.js":"3","/Users/noa/Development/code/projects/appointments-list/appointments-list-frontend/src/components/Login.js":"4","/Users/noa/Development/code/projects/appointments-list/appointments-list-frontend/src/services/api.js":"5","/Users/noa/Development/code/projects/appointments-list/appointments-list-frontend/src/components/Appointments.js":"6","/Users/noa/Development/code/projects/appointments-list/appointments-list-frontend/src/components/Signup.js":"7","/Users/noa/Development/code/projects/appointments-list/appointments-list-frontend/src/components/Appointment.js":"8","/Users/noa/Development/code/projects/appointments-list/appointments-list-frontend/src/components/ModalEdit.js":"9","/Users/noa/Development/code/projects/appointments-list/appointments-list-frontend/src/components/AppointmentForm.js":"10"},{"size":223,"mtime":1608616487627,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1608109825133,"results":"13","hashOfConfig":"12"},{"size":3892,"mtime":1608618263828,"results":"14","hashOfConfig":"12"},{"size":1133,"mtime":1608618559700,"results":"15","hashOfConfig":"12"},{"size":1534,"mtime":1608616487628,"results":"16","hashOfConfig":"12"},{"size":1076,"mtime":1608616487626,"results":"17","hashOfConfig":"12"},{"size":1544,"mtime":1608618158097,"results":"18","hashOfConfig":"12"},{"size":1502,"mtime":1608616487625,"results":"19","hashOfConfig":"12"},{"size":859,"mtime":1608617018405,"results":"20","hashOfConfig":"12"},{"size":6502,"mtime":1608616487625,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"11g3x2l",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},"/Users/noa/Development/code/projects/appointments-list/appointments-list-frontend/src/index.js",[],["46","47"],"/Users/noa/Development/code/projects/appointments-list/appointments-list-frontend/src/reportWebVitals.js",[],["48","49"],"/Users/noa/Development/code/projects/appointments-list/appointments-list-frontend/src/App.js",[],"/Users/noa/Development/code/projects/appointments-list/appointments-list-frontend/src/components/Login.js",[],"/Users/noa/Development/code/projects/appointments-list/appointments-list-frontend/src/services/api.js",[],"/Users/noa/Development/code/projects/appointments-list/appointments-list-frontend/src/components/Appointments.js",[],"/Users/noa/Development/code/projects/appointments-list/appointments-list-frontend/src/components/Signup.js",[],"/Users/noa/Development/code/projects/appointments-list/appointments-list-frontend/src/components/Appointment.js",["50"],"import React from \"react\";\nimport ModalEdit from \"./ModalEdit\";\nimport { Button } from \"reactstrap\";\n\nclass Appointment extends React.Component {\n  state = {\n    isUpdate: false,\n    appointment: {},\n  };\n\n  toggleIsUpdate = () => {\n    this.setState({ isUpdate: !this.state.isUpdate });\n  };\n\n  render() {\n    const {\n      appointment,\n      index,\n      deleteAppointment,\n      updateAppointment,\n    } = this.props;\n\n    return (\n      <>\n        <tr>\n          <th>\n            {`${index + 1}`}\n            <ModalEdit\n              buttonLabel={\"EDIT\"}\n              className={\"Modal\"}\n              appointment={appointment}\n            />\n          </th>\n          <td>{appointment.date}</td>\n          <td>{appointment.time}</td>\n          <td>{appointment.doctor}</td>\n          <td>{appointment.specialty}</td>\n          <td>{appointment.patient}</td>\n          <td>{appointment.appointment_notes}</td>\n          <td>{appointment.symptoms}</td>\n          <td>{appointment.location}</td>\n          <td>{appointment.need_insurance ? \"Yes\" : \"No\"}</td>\n          {/* <td>{appointment.insurance_status}</td> */}\n          <td>{appointment.insurance_approval ? \"Yes\" : \"No\"}</td>\n          <td>{appointment.insurance_notes}</td>\n          <td>\n            <Button\n              onClick={() => deleteAppointment(appointment.id)}\n              color=\"danger\"\n            >\n              Delete\n            </Button>\n          </td>\n        </tr>\n      </>\n    );\n  }\n}\nexport default Appointment;\n","/Users/noa/Development/code/projects/appointments-list/appointments-list-frontend/src/components/ModalEdit.js",[],"/Users/noa/Development/code/projects/appointments-list/appointments-list-frontend/src/components/AppointmentForm.js",["51","52"],"import React from \"react\";\n\nimport {\n  Button,\n  ModalBody,\n  Modal,\n  ModalHeader,\n  Col,\n  Row,\n  Form,\n  InputGroup,\n  Label,\n  Input,\n  FormText,\n  FormFeedback,\n} from \"reactstrap\";\n\nclass AppointmentForm extends React.Component {\n  state = {\n    modal: false,\n    appointment: {\n      time: \"\",\n      date: \"\",\n      specialty: \"\",\n      patient: \"\",\n      appointment_notes: \"\",\n      symptoms: \"\",\n      location: \"\",\n      need_insurance: true,\n      insurance_status: \"\",\n      insurance_approval: true,\n      insurance_notes: \"\",\n      user_id: \"\",\n    },\n  };\n  toggle = () =>\n    this.setState({\n      modal: !this.state.modal,\n      appointment: { ...this.state.appointment, user_id: this.props.user_id },\n    });\n\n  handleChange = (e) => {\n    let value = e.target.value;\n    let name = e.target.name;\n    let newAppointment = this.state.appointment;\n\n    if (name === \"need_insurance\" || value === \"insurance_approval\") {\n      value === \"yes\" ? (value = true) : (value = false);\n      this.setState({\n        appointment: {\n          ...newAppointment,\n          [name]: value,\n        },\n      });\n    } else {\n      this.setState({\n        appointment: {\n          ...newAppointment,\n          [name]: value,\n        },\n      });\n    }\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let appointment = this.state.appointment;\n    this.props.addAppointment(appointment);\n    this.clearState();\n  };\n\n  clearState = () => {\n    this.setState({\n      modal: false,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Button color=\"info\" onClick={this.toggle}>\n          {this.props.buttonLabel}\n        </Button>\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.toggle}>New Appointment</ModalHeader>\n          <ModalBody>\n            <Form onChange={this.handleChange} onSubmit={this.handleSubmit}>\n              <Row form>\n                <InputGroup row>\n                  <Label for=\"date\" sm={2}>\n                    Date\n                  </Label>\n                  <Col sm={10}>\n                    <Input type=\"date\" name=\"date\" id=\"date\" />\n                  </Col>\n                </InputGroup>\n                <InputGroup row>\n                  <Label for=\"time\" sm={2}>\n                    Time\n                  </Label>\n\n                  <Col sm={10}>\n                    <Input type=\"time\" name=\"time\" id=\"time\" required />\n                  </Col>\n                </InputGroup>\n              </Row>\n              <InputGroup row>\n                <Label for=\"patient\" sm={2}>\n                  Patient\n                </Label>\n                <Col sm={10}>\n                  <Input\n                    type=\"string\"\n                    name=\"patient\"\n                    id=\"patient\"\n                    placeholder=\"Patient Name\"\n                  />\n                </Col>\n              </InputGroup>\n              <InputGroup row>\n                <Label for=\"doctor\" sm={2}>\n                  Doctor\n                </Label>\n                <Col sm={10}>\n                  <Input\n                    type=\"string\"\n                    name=\"doctor\"\n                    id=\"doctor\"\n                    required\n                    placeholder=\"Doctor Name\"\n                  />\n                </Col>\n              </InputGroup>\n              <InputGroup row>\n                <Label for=\"specialty\" sm={2}>\n                  Specialty\n                </Label>\n                <Col sm={10}>\n                  <Input\n                    type=\"string\"\n                    name=\"specialty\"\n                    id=\"specialty\"\n                    placeholder=\"Doctor Specialty\"\n                  />\n                </Col>\n              </InputGroup>\n\n              <InputGroup>\n                <Label for=\"location\">Address</Label>\n                <Input\n                  type=\"text\"\n                  name=\"location\"\n                  id=\"location\"\n                  placeholder=\"Address\"\n                />\n              </InputGroup>\n              <InputGroup row>\n                <Label for=\"appointment_notes\" sm={2}>\n                  Notes\n                </Label>\n                <Col sm={10}>\n                  <Input\n                    type=\"textarea\"\n                    name=\"appointment_notes\"\n                    id=\"appointment_notes\"\n                  />\n                </Col>\n              </InputGroup>\n\n              <InputGroup row>\n                <Label for=\"symptoms\" sm={2}>\n                  Symptoms\n                </Label>\n                <Col sm={10}>\n                  <Input type=\"textarea\" name=\"symptoms\" id=\"symptoms\" />\n                </Col>\n              </InputGroup>\n\n              <InputGroup row>\n                <Label for=\"need_insurance\" sm={2}>\n                  Need Insurance Approval\n                </Label>\n                <Col sm={10}>\n                  <Input\n                    type=\"select\"\n                    name=\"need_insurance\"\n                    id=\"need_insurance\"\n                  >\n                    <option>Yes</option>\n                    <option>No</option>\n                  </Input>\n                </Col>\n              </InputGroup>\n\n              <InputGroup row>\n                <Label for=\"insurance_approval\" sm={2}>\n                  Approved By Insurance?\n                </Label>\n                <Col sm={10}>\n                  <Input\n                    type=\"select\"\n                    name=\"insurance_approval\"\n                    id=\"insurance_approval\"\n                  >\n                    <option>Yes</option>\n                    <option>No</option>\n                  </Input>\n                </Col>\n              </InputGroup>\n              <InputGroup row>\n                <Label for=\"insurance_notes\" sm={2}>\n                  Insurance Notes\n                </Label>\n                <Col sm={10}>\n                  <Input\n                    type=\"textarea\"\n                    name=\"insurance_notes\"\n                    id=\"insurance_notes\"\n                  />\n                </Col>\n              </InputGroup>\n              <InputGroup check row>\n                <Col sm={{ size: 10, offset: 2 }}>\n                  <Button onClick={this.handleSubmit}>Submit</Button>\n                </Col>\n              </InputGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default AppointmentForm;\n",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"53","replacedBy":"57"},{"ruleId":"55","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":20,"column":7,"nodeType":"61","messageId":"62","endLine":20,"endColumn":24},{"ruleId":"59","severity":1,"message":"63","line":14,"column":3,"nodeType":"61","messageId":"62","endLine":14,"endColumn":11},{"ruleId":"59","severity":1,"message":"64","line":15,"column":3,"nodeType":"61","messageId":"62","endLine":15,"endColumn":15},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],["65"],["66"],"no-unused-vars","'updateAppointment' is assigned a value but never used.","Identifier","unusedVar","'FormText' is defined but never used.","'FormFeedback' is defined but never used.","no-global-assign","no-unsafe-negation"]